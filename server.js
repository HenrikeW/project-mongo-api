import express from 'express';
import bodyParser from 'body-parser';
import cors from 'cors';
import mongoose from 'mongoose';

import musicData from './data/top-music.json';

// If you're using one of our datasets, uncomment the appropriate import below
// to get started!
// 
// import goldenGlobesData from './data/golden-globes.json'
// import avocadoSalesData from './data/avocado-sales.json'
// import booksData from './data/books.json'
// import netflixData from './data/netflix-titles.json'
// import topMusicData from './data/top-music.json'

const mongoUrl = process.env.MONGO_URL || "mongodb://localhost/project-mongo"
mongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true })
mongoose.Promise = Promise

const Track = mongoose.model('Track', {
  trackName: String,
  artistName: String,
  genre: String,
  bpm: Number,
  popularity: Number
});

const Artist = mongoose.model('Artist', {
  name: String
});

if (process.env.RESET_DATABASE) {
  const seedDatabase = async () => {
    await Track.deleteMany();
    await Artist.deleteMany();

    musicData.forEach((trackData) => {
      new Track(trackData).save();
    });

    const artists = musicData.map((item) => item.artistName)
    console.log(artists.length)
    const uniqueArtists = Array.from(new Set(artists));
    console.log(uniqueArtists.length);

    uniqueArtists.forEach((artist) => {
      new Artist({ name: artist }).save();
    });
  };
  seedDatabase();
};

// Defines the port the app will run on. Defaults to 8080, but can be 
// overridden when starting the server. For example:
//
//   PORT=9000 npm start
const port = process.env.PORT || 8080
const app = express()

// Add middlewares to enable cors and json body parsing
app.use(cors())
app.use(bodyParser.json())

// Start defining your routes here
app.get('/', (req, res) => {
  res.send('Hello world')
})

// Get all tracks in the list with the option to query for fields
app.get('/tracks', async (req, res) => {
  const tracks = await Track.find(req.query);
  res.json(tracks);
});

//Get all artists
app.get('/artists', async (req, res) => {
  const artists = await Artist.find();
  res.json(artists);
});

//Get one track by id generated by mongoose
app.get('/tracks/:id', async (req, res) => {
  const track = await Track.findById(req.params.id);
  if (track) {
    res.json(track)
  } else {
    res.status(404).json({ error:'Could not find this track' })
  };
});

// Start the server
app.listen(port, () => {
  console.log(`Server running on http://localhost:${port}`)
})
